global
    # Do not put emerg messages to syslog that end up spamming all shell sessions through syslog when a backend is down    
    # See https://serverfault.com/questions/704639/disable-haproxy-logging-messages
    log /dev/log    local0 info alert
    log /dev/log    local1 notice alert
    stats socket /run/haproxy/admin.sock mode 660 level admin
    stats timeout 30s
    user haproxy
    group haproxy

    # SSL config as per https://mozilla.github.io/server-side-tls/ssl-config-generator/?server=haproxy-1.6.3&openssl=1.0.1k&hsts=no&profile=modern
    tune.ssl.default-dh-param 2048
    ssl-default-bind-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-bind-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets
    ssl-default-server-ciphers ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256
    ssl-default-server-options no-sslv3 no-tlsv10 no-tlsv11 no-tls-tickets

defaults
    log global
    mode    http
    option  httplog
    option  dontlognull
    timeout connect 5000
    timeout client  50000
    timeout server  50000
    errorfile 400 /etc/haproxy/errors/400.html
    errorfile 403 /etc/haproxy/errors/403.html
    errorfile 408 /etc/haproxy/errors/408.html
    errorfile 500 /etc/haproxy/errors/500.html
    errorfile 502 /etc/haproxy/errors/502.html
    errorfile 503 /etc/haproxy/errors/503.html
    errorfile 504 /etc/haproxy/errors/504.html

# Use docker embedded dns for dynamically fetching the upstream server IPs
# Sources:
#  * https://serverfault.com/questions/681000/force-haproxy-to-lookup-dns-for-backend-server
#  * https://serverfault.com/questions/704482/haproxy-resolvers-section-amazon-elb
resolvers dns
  nameserver dockerdns 127.0.0.11:53
  hold valid 5s

frontend multiplex-ssh-http
    bind :80
    bind :443 ssl crt /data/ssl/pem
    mode tcp
    option tcplog
    tcp-request inspect-delay 5s
    tcp-request content accept if HTTP

    # Detect SSH connection attempts
    acl client_attempts_ssh payload(0,7) -m bin 5353482d322e30

    # Enables maintenance mode, see https://gist.github.com/sts/62d8dd59221ab68661aa
    acl web-maintenance src --
    acl web-maintenance-ex src --

    acl destination_gitlab hdr_beg(host) -i gitlab.
    acl destination_gitlab hdr_dom(host) "$GITLAB_PUBLIC_IP"

    use_backend tcp-ssh if client_attempts_ssh
    use_backend http-proxy if METH_CONNECT
    use_backend web-maintenance if web-maintenance !web-maintenance-ex
    use_backend http-gitlab if destination_gitlab
    default_backend http-nginx

backend http-nginx
    server http soul-nginx:80 check resolvers dns check inter 1000

backend http-gitlab
    server http gitlab:80 check resolvers dns check inter 1000

backend http-proxy
    server http platform-http-proxy:8080 resolvers dns check inter 1000

backend web-maintenance
    errorfile 503 /etc/haproxy/errors/maintenance.html

backend tcp-ssh
    mode tcp
    option  tcplog
    server ssh dockerhost:22
    timeout server 2h
